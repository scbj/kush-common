getters:
  channel:
    method: attribute
    props:
      attributeName: title
      target: 'a.playbackSoundBadge__lightLink.sc-link-light'

  duration:
    method: attribute
    props:
      attributeName: aria-valuemax
      target: 'div.playbackTimeline__progressWrapper'
      type: Number

  playing:
    method: exists
    props:
      target: 'button.playing'

  shuffling:
    method: exists
    props:
      target: 'button.shuffleControl.m-shuffling'

  repeating:
    method: stateExists
    props:
      defaultState: none
      targets:
        one: 'button.repeatControl.m-one'
        all: 'button.repeatControl.m-all'

  title:
    method: attribute
    props:
      attributeName: title
      target: 'a.playbackSoundBadge__titleLink'

  thumbnail:
    method: backgroundImage
    props:
      target: '.playControls__soundBadge span.sc-artwork.image__full'

  url:
    method: attribute
    props:
      attributeName: href
      target: 'a.playbackSoundBadge__titleLink'


watchers:
  - value: playing
    emit: 'playback:statusChanged'
    interval: 400
    payload: [ playing ]

  - value: repeating
    emit: 'playback:statusChanged'
    interval: 2000
    payload: [ repeating ]

  - value: shuffling
    emit: 'playback:statusChanged'
    interval: 3000
    payload: [ shuffling ]

  - value: url
    emit: 'playback:trackChanged'
    payload: [ channel, duration, title, thumbnail, url ]
    interval: 200


commands:
  - trigger: 'playback:next'
    actions:
      - name: click
        props:
          target: '.skipControl.sc-ir.playControls__control.playControls__next.skipControl__next'

  - trigger: 'playback:play'
    actions:
      - name: navigate

  - trigger: 'playback:previous'
    actions:
      - name: click
        props:
          target: '.skipControl.sc-ir.playControls__control.playControls__prev.skipControl__previous'

  - trigger: 'playback:toggleStatus'
    actions:
      - name: click
        props:
          target: '.playControl.sc-ir.playControls__control.playControls__play'